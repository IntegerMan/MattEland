@model Ani.Core.Models.Traffic.TrafficModel

@{
    ViewBag.Title = "Traffic";
    Layout = "~/Views/Shared/_CommonLayout.cshtml";
}

@section breadcrumbs
{
    <li><a href="@Url.Action("ANI", "Projects")">ANI</a></li>
}

@section scripts
{

    <script charset="UTF-8" type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0">



    </script>

    <script type="text/javascript">

        $(function() {
            getMap();
        });

        var infobox = null;

        function addPin(map, lat, lng, severityId, severityName, title, description) {

            // Build the location of the pin
            var location = new Microsoft.Maps.Location(lat, lng);

            // Create a pin object
            var pin = new Microsoft.Maps.Pushpin(location, { text: '!', draggable: false });

            // TODO: Support for severity-based icons would be nice.

            pin.Title = title;
            pin.Description = description;
            pin.SeverityName = severityName;

            // Add handler for the pushpin click event.
            Microsoft.Maps.Events.addHandler(pin, 'click', displayInfobox);

            // Add the items to the map
            map.entities.push(pin);
        }

        function displayInfobox(e) {
            if (e.targetType == 'pushpin') {
                infobox.setLocation(e.target.getLocation());
                infobox.setOptions({ visible: true, title: e.target.SeverityName + ": " + e.target.Title, description: e.target.Description });
            } else {
                hideInfobox(e);
            }
        }

        function hideInfobox(e) {
            infobox.setOptions({ visible: false });
        }

        function initializeInfoBox(map) {
            // Create the infobox for the pushpins
            infobox = new Microsoft.Maps.Infobox(new Microsoft.Maps.Location(0, 0),
            {
                visible: false,
                offset: new Microsoft.Maps.Point(0, 0)
            });
            map.entities.push(infobox);
        }

        function getMap() {

            // Set up mapping options
            var mapOptions = {
                credentials: "@Model.BingMapsKey",
                center: new Microsoft.Maps.Location(@Model.MapLat, @Model.MapLong),
                mapTypeId: Microsoft.Maps.MapTypeId.road,
                zoom: 11,
                showScalebar: true
            }

            // Create the map control
            var map = new Microsoft.Maps.Map(document.getElementById("mapDiv"), mapOptions);

            initializeInfoBox(map);

            // Hide the infobox when the map is moved.
            Microsoft.Maps.Events.addHandler(map, 'viewchange', hideInfobox);

            // Add Construction
            @foreach (var incident in Model.ConstructionEvents)
            {
                @:addPin(map, @incident.Lat, @incident.Lng, @incident.SeverityID, '@incident.SeverityName', '@incident.TypeName', '@incident.Description');
            }

            // Add Accidents
            @foreach (var accident in Model.Accidents)
            {
                @:addPin(map, @accident.Lat, @accident.Lng, @accident.SeverityID, '@accident.SeverityName', '@accident.TypeName', '@accident.Description');
            }
        }

    </script>
}

<div class="row">
    <div class="col-md-8">
        <div id='mapDiv' style="position:relative; height:400px;"></div>        
    </div>
    <div class="col-md-4">

        <h2>Select Subpage</h2>

        <div class="list-group">
            <a href="@Url.Action("Accidents", "Traffic")" class="list-group-item">
                <span class="badge">@Model.Accidents.Count</span>
                Accidents
            </a>
            <a href="@Url.Action("Construction", "Traffic")" class="list-group-item">
                <span class="badge">@Model.ConstructionEvents.Count</span>
                Construction
            </a>
        </div>
    </div>
</div>
